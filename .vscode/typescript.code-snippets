{
	// Place your vscode-brautomationtools workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Get only property not initialized in constructor": {
		"prefix": "propget init",
		"body": [
			"/** ${3:TODO Description} */",
			"public get ${1:name}(): ${2:string} {",
			"    if (!this.#isInitialized || (this.#$1 === undefined)) { throw new Error(`Use of not initialized object`); }",
			"    return this.#$1;$0",
			"}",
			"#$1: $2 | undefined;",
		],
		"description": "Log output to console"
	},
	"ESLint XML disable": {
		"prefix": "eslint xml disable",
		"body": [
			"/* eslint-disable @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access */",
		],
		"description": "Disable ESLint errors of XML object access"
	},
	"ESLint XML enable": {
		"prefix": "eslint xml enable",
		"body": [
			"/* eslint-enable */",
		],
		"description": "Disable ESLint errors of XML object access"
	},
}